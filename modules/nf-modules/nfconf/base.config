def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

params {
 citest=false
 repoDir='/seqprg'
 //cloudprj = ''
 version = 'latest'
 registry = "ghcr.io/formbio"
}

docker {
  runOptions = "--gpus all -u 0"
  enabled = true
  // userEmulation = true
  process {
      executor = 'Local'
      queue = 'compute'
      maxRetries    = 3
      maxErrors     = '-1'
      maxForks = 50
      cache = 'lenient'
      withLabel: augustus {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_augustus:${params.version}"
        cpus = 32
        memory = 120.GB
      }
      withLabel: basic {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_cbbasic:${params.version}"
        cpus = 4
        memory = 16.GB
      }
      withLabel: entap {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_entap:${params.version}"
        cpus = 16
        memory = 64.GB
      }
      withLabel: evm {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_combinefilter:${params.version}"
        cpus = 32
        memory = 120.GB
      }
      withLabel: exonerate_p2g {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_exonerate:${params.version}"
        cpus = 32
        memory = 120.GB
      }
      withLabel: formatting {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_cbbasic:${params.version}"
        cpus = 4
        memory = 30.GB
      }
      withLabel: genome2protein {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 32
        memory = 120.GB
      }
        withLabel: helixer {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_helixer:${params.version}"
        cpus = 32
        memory = 128.GB
      }
      withLabel: liftoff {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_liftoff:${params.version}"
        cpus = 16
        memory = 64.GB
      }
      withLabel: ncbiclibraries {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 32
        memory = 120.GB
      }
      withLabel: ncbitools {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbitools:${params.version}"
        cpus = 2
        memory = 20.GB
      }
      withLabel: pasa {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_pasa:${params.version}"
        cpus = 16
        memory = 64.GB
      }
      withLabel: prosplign {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 32
        memory = 120.GB
      }
      withLabel: splign {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 4
        memory = 32.GB
      }
      withLabel: tetools {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_tetools:${params.version}"
        cpus = 16
        memory = 48.GB
      }
      withLabel: transdecoder {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_transdecoder:${params.version}"
        cpus = 16
        memory = 48.GB
      }
      withLabel: trinity {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_trinity:${params.version}"
        cpus = 32
        memory = 120.GB
      }
    }
}

docker_small {
  runOptions = "--gpus all -u 0"
  enabled = true
  // userEmulation = true
  process {
      executor = 'Local'
      queue = 'compute'
      maxRetries    = 3
      maxErrors     = '-1'
      maxForks = 50
      cache = 'lenient'
      withLabel: augustus {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_augustus:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: basic {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_cbbasic:${params.version}"
        cpus = 4
        memory = 10.GB
      }
      withLabel: entap {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_entap:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: evm {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_combinefilter:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: exonerate_p2g {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_exonerate:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: formatting {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_cbbasic:${params.version}"
        cpus = 4
        memory = 15.GB
      }
      withLabel: genome2protein {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 15
        memory = 30.GB
      }
        withLabel: helixer {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_helixer:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: liftoff {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_liftoff:${params.version}"
        cpus = 15
        memory = 25.GB
      }
      withLabel: ncbiclibraries {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: ncbitools {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbitools:${params.version}"
        cpus = 2
        memory = 12.GB
      }
      withLabel: pasa {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_pasa:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: prosplign {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: splign {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_ncbiclibraries:${params.version}"
        cpus = 4
        memory = 30.GB
      }
      withLabel: tetools {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_tetools:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: transdecoder {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_transdecoder:${params.version}"
        cpus = 15
        memory = 30.GB
      }
      withLabel: trinity {
        errorStrategy  = 'ignore'
        container = "${params.registry}/flag_trinity:${params.version}"
        cpus = 15
        memory = 30.GB
      }
    }
}

singularity {
  runOptions = "--writable-tmpfs"
  enabled = true
  autoMounts = true
  process {
  executor = 'Local'
  queue = 'compute'
  maxRetries    = 3
  maxErrors     = '-1'
  maxForks = 50
  cache = 'lenient'
      withLabel: augustus {
        errorStrategy  = 'ignore'
        container = 'file://containers/augustus/flag_augustus.image'
        cpus = 32
        memory = 120.GB
      }
      withLabel: basic {
        errorStrategy  = 'ignore'
        container = 'file://containers/cbbasic/flag_cbbasic.image'
        cpus = 4
        memory = 16.GB
      }
      withLabel: entap {
        errorStrategy  = 'ignore'
        container = 'file://containers/entap/flag_entap.image'
        cpus = 16
        memory = 64.GB
      }
      withLabel: evm {
        errorStrategy  = 'ignore'
        cpus = 32
        container = 'file://containers/combinefilter/flag_combinefilter.image'
        memory = 120.GB
      }
      withLabel: exonerate_p2g {
        errorStrategy  = 'ignore'
        cpus = 32
        container = 'file://containers/exonerate/flag_exonerate.image'
        memory = 120.GB
      }
      withLabel: formatting {
        errorStrategy  = 'ignore'
        cpus = 4
        container = 'file://containers/cbbasic/flag_cbbasic.image'
        memory = 30.GB
      }
      withLabel: genome2protein {
        errorStrategy  = 'ignore'
        container = 'file://containers/ncbiclibraries/flag_ncbiclibraries.image'
        cpus = 32
        memory = 120.GB
      }
        withLabel: helixer {
        errorStrategy  = 'ignore'
        cpus = 32
        container = 'file://containers/helixercpu/flag_helixercpu.image'
        memory = 128.GB
      }
      withLabel: liftoff {
        errorStrategy  = 'ignore'
        container = 'file://containers/liftoff/flag_liftoff.image'
        cpus = 16
        memory = 64.GB
      }
      withLabel: ncbiclibraries {
        errorStrategy  = 'ignore'
        container = 'file://containers/ncbiclibraries/flag_ncbiclibraries.image'
        cpus = 32
        memory = 120.GB
      }
      withLabel: ncbitools {
        errorStrategy  = 'ignore'
        container = 'file://containers/ncbitools/flag_ncbitools.image'
        cpus = 2
        memory = 20.GB
      }
      withLabel: pasa {
        errorStrategy  = 'ignore'
        container = 'file://containers/pasa/flag_pasa.image'
        cpus = 16
        memory = 64.GB
      }
      withLabel: prosplign {
        errorStrategy  = 'ignore'
        container = 'file://containers/pasa/flag_pasa.image'
        cpus = 32
        memory = 120.GB
      }
      withLabel: splign {
        errorStrategy  = 'ignore'
        container = 'file://containers/ncbiclibraries/flag_ncbiclibraries.image'
        cpus = 4
        memory = 32.GB
      }
      withLabel: tetools {
        errorStrategy  = 'ignore'
        container = 'file://containers/tetools/flag_tetools.image'
        cpus = 16
        memory = 48.GB
      }
      withLabel: transdecoder {
        errorStrategy  = 'ignore'
        container = 'file://containers/transdecoder/flag_transdecoder.image'
        cpus = 16
        memory = 48.GB
      }
      withLabel: trinity {
        errorStrategy  = 'ignore'
        container = 'file://containers/trinity/flag_trinity.image'
        cpus = 32
        memory = 120.GB
      }
    }
}


//google {
//  region  = 'us-central1'
  //project = "${params.cloudprj}"
//  lifeSciences.bootDiskSize = 500.GB
//  lifeSciences.debug = true
//  lifeSciences.sshDaemon = true
//  batch.bootDiskSize = 500.GB
//  batch.debug = true
//  batch.sshDaemon = true
//}



trace {
  enabled = true
  file = 'pipeline_trace.txt'
  overwrite = true
  field = 'task_id,native_id,process,name,status,exit,submit,start,complete,duration,realtime'
}

timeline {
  enabled = true
  overwrite = true
  file = 'timeline.html'
}

report {
  enabled = true
  overwrite = true
  file = 'report.html'
}
dag {
    enabled = true
    file    = "pipeline_dag_${trace_timestamp}.svg"
}
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

